<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: VB | Mike Murray]]></title>
  <link href="http://mkmurray.com/blog/categories/vb/atom.xml" rel="self"/>
  <link href="http://mkmurray.com/"/>
  <updated>2012-12-15T15:41:41-07:00</updated>
  <id>http://mkmurray.com/</id>
  <author>
    <name><![CDATA[Mike Murray]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[InsertGuid Visual Studio Macro]]></title>
    <link href="http://mkmurray.com/blog/2007/12/05/insertguid-visual-studio-macro/"/>
    <updated>2007-12-05T13:44:00-07:00</updated>
    <id>http://mkmurray.com/blog/2007/12/05/insertguid-visual-studio-macro</id>
    <content type="html"><![CDATA[<div class='post'>
<p>If you ever work on a project or installer that requires you to create some GUIDs frequently, you should make your life easier by creating a Visual Studio macro that will insert a GUID wherever your cursor is. Here's how to do it:</p> <span class="fullpost">   <h4>Create the Macro</h4>    <ul>     <li>Bring up the &quot;Macro IDE&quot; window in Visual Studio by pressing <span style="font-family: courier new">Alt+F11</span>. </li>      <li>Right-click on <span style="font-family: courier new">MyMacros</span> and select <span style="font-family: courier new">Add Module</span>; alternatively, you can just rename <span style="font-family: courier new">Module1</span> instead of creating a new module. Enter in <span style="font-family: courier new">GuidModule</span> as the name. </li>      <li>Copy and paste the following code between <span style="font-family: courier new">Public Module GuidModule</span> and <span style="font-family: courier new">End Module</span>: </li>   </ul>    <div style="border-bottom: gray 1px solid; border-left: gray 1px solid; padding-bottom: 4px; line-height: 12pt; background-color: #f4f4f4; margin: 20px 0px 10px; padding-left: 4px; width: 97.5%; padding-right: 4px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; max-height: 200px; font-size: 8pt; border-top: gray 1px solid; cursor: text; border-right: gray 1px solid; padding-top: 4px">     <pre style="border-bottom-style: none; padding-bottom: 0px; line-height: 12pt; border-right-style: none; background-color: #f4f4f4; margin: 0em; padding-left: 0px; width: 100%; padding-right: 0px; font-family: consolas, &#39;Courier New&#39;, courier, monospace; border-top-style: none; height: 105px; color: black; font-size: 8pt; border-left-style: none; padding-top: 0px"><span style="color: #008000">REM Insert a new Guid at whatever the cursor has selected</span>
<span style="color: #0000ff">Sub</span> InsertGuid()
   <span style="color: #0000ff">Dim</span> ts <span style="color: #0000ff">As</span> TextSelection = ActiveDocument().Selection
   <span style="color: #0000ff">Dim</span> guid <span style="color: #0000ff">As</span> System.Guid = System.Guid.NewGuid()
   ts.Insert(guid.ToString().ToUpper())
<span style="color: #0000ff">End</span> Sub</pre>
  </div>

  <ul>
    <li>Be sure to save the changes and close the &quot;Macro IDE&quot; window. </li>
  </ul>

  <h4>Assign a Keyboard Combination</h4>

  <ul>
    <li>Back at the main Visual Studio window, go to <span style="font-family: courier new">Tools Options...</span> and then navigate to <span style="font-family: courier new">Environment Keyboard</span>. </li>

    <li>Type <span style="font-family: courier new">InsertGuid</span> into the <span style="font-family: courier new">Show Commands Containing</span> text field and select the macro you just created (<span style="font-family: courier new">Macros.MyMacros.GuidModule.InsertGuid</span>). </li>

    <li>Put the cursor in the <span style="font-family: courier new">Press shortcut keys</span> text field and type a keyboard combination (I have opted to use <span style="font-family: courier new">Alt+G</span>). </li>

    <li>Click on <span style="font-family: courier new">Assign</span> (be careful, as it will replace any existing binding for that key). </li>
  </ul>
</span></div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Eyal</div>
<div class='content'>
great macro thanks</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
