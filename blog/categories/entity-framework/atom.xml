<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Entity Framework | Mike Murray]]></title>
  <link href="http://mkmurray.com/blog/categories/entity-framework/atom.xml" rel="self"/>
  <link href="http://mkmurray.com/"/>
  <updated>2012-12-15T15:41:41-07:00</updated>
  <id>http://mkmurray.com/</id>
  <author>
    <name><![CDATA[Mike Murray]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Is LINQ to SQL Being Replaced Already?]]></title>
    <link href="http://mkmurray.com/blog/2008/11/03/is-linq-to-sql-being-replaced-already/"/>
    <updated>2008-11-03T13:00:00-07:00</updated>
    <id>http://mkmurray.com/blog/2008/11/03/is-linq-to-sql-being-replaced-already</id>
    <content type="html"><![CDATA[<div class='post'>
<p>The short answer is &quot;kind of&quot;; the push is for the <a href="http://en.wikipedia.org/wiki/ADO.NET_Entity_Framework">ADO.NET Entity Framework</a> to be the encouraged ORM approach from now on.&#160; For the long-winded, thorough explanation of this answer (based on blog posts from Microsoft employees and managers), see the following blog post that someone pointed me toward:</p>  <p><a title="http://www.infoq.com/news/2008/11/DLINQ-Future" href="http://www.infoq.com/news/2008/11/DLINQ-Future">http://www.infoq.com/news/2008/11/DLINQ-Future</a></p>  </div>


<h2>Comments</h2>


<div class='comments'>
<div class='comment'>
<div class='author'>Anonymous</div>
<div class='content'>
No it isn&#39;t, that is a missunderstanding. Linq to sql for SQL Server will always be there just like there are ado.net classes for SQL Server directly tied into the .NET framework libraries.</div>
</div>
</div>

]]></content>
  </entry>
  
</feed>
